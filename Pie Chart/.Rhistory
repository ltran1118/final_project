magic("year")
runApp('Pie Chart')
runApp('Pie Chart')
runApp('Pie Chart')
addition("gender")
runApp('Pie Chart')
runApp('Pie Chart')
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~col_name, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
addition("gender")
addition("armed")
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
addition("gender")
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
Name(police_final) <- c("gender", "armed", "race", "age.group", "year")
names(police_final) <- c("gender", "armed", "race", "age.group", "year")
names
Col_Name <- c("gender", "armed", "race", "age.group", "year")
Col_Name
runApp('Pie Chart')
runApp('Pie Chart')
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp('Pie Chart')
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp('Pie Chart')
runApp('Pie Chart')
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp('Pie Chart')
addition("armed")
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Police Data from 2013 to 2016"),
sidebarPanel(
selectInput("variable", "Variable:",
choices = list("Gender" = "gender",
"Armed v. Unarmed" = "armed",
"Race" = "race",
"Age" = "age.group",
"Year" = "year"))
),
mainPanel(
titlePanel("Graph of Selected Variable:"),
plotlyOutput("plot")
)
))
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
addition("gender")
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(title = col_name,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp('Pie Chart')
runApp('Pie Chart')
runApp('Pie Chart')
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(title = col_name,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
addition("gender")
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly( labels = ~addition, values = ~count, type = 'pie') %>%
layout(title = col_name,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
addition("gender")
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly( labels = ~col_name, values = ~count, type = 'pie') %>%
layout(title = col_name,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
addition("gender")
library(shiny)
library(plotly)
library(dplyr)
library(rsconnect)
addition <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(title = col_name,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
addition("race")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
Pie("gender")
Pie("gender")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())
Pie("gender")
police_final <-read.csv("police_final.csv")
setwd("~/final_project/Pie Chart")
police_final <-read.csv("police_final.csv")
runApp()
runApp()
Column.Name <- c("gender", "armed", "race", "age.group", "year")
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~addition, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Pie, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
library(shiny)
library(plotly)
library(dplyr)
library(rsconnect)
police_final <-read.csv("police_final.csv")
#Gender Pie Chart
gender.data<- police_final %>%
group_by(gender) %>%
summarise(n())
colnames(gender.data)[2]<-"Number"
gender <- plot_ly(gender.data, labels = ~gender, values= ~Number, type = 'pie') %>%
layout(title = 'Gender',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
# Pie Chart function
Column.Name <- c("gender", "armed", "race", "age.group", "year")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Column.Name, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
shinyServer(function(input, output) {
output$plot <- renderPlotly(addition(input$variable))
})
runApp()
library(shiny)
library(plotly)
library(dplyr)
library(rsconnect)
police_final <-read.csv("police_final.csv")
# Pie Chart function
Column.Name <- c("gender", "armed", "race", "age.group", "year")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Column.Name, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
shinyServer(function(input, output) {
output$plot <- renderPlotly(addition(input$variable))
})
runApp()
library(shiny)
library(plotly)
library(dplyr)
library(rsconnect)
police_final <-read.csv("police_final.csv")
# Pie Chart function
Column.Name <- c("gender", "armed", "race", "age.group", "year")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~col_name, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
shinyServer(function(input, output) {
output$plot <- renderPlotly(addition(input$variable))
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly( values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
library(shiny)
library(plotly)
library(dplyr)
library(rsconnect)
police_final <-read.csv("police_final.csv")
# Pie Chart function
Column.Name <- c("gender", "armed", "race", "age.group", "year")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
shinyServer(function(input, output) {
output$plot <- renderPlotly(Pie(input$variable))
})
runApp()
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Pie, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
Column.Name <- c("gender", "armed", "race", "age.group", "year")
Pie("gender")
Magic<- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())}
Magic("gender")
Gender = c('Male','Female', "Transgender", "Unknown", "N/A")
Gender <- c('Male','Female', "Transgender", "Unknown", "N/A")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Gender, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Gender, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Gender <- c('Male','Female', "Transgender", "Unknown", "N/A")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Gender, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
Gender <- c('N/A', 'Male', 'Female', "Transgender", "Unknown")
runApp()
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Pie, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
library(shiny)
library(plotly)
library(dplyr)
library(rsconnect)
police_final <-read.csv("police_final.csv")
Gender <- c('N/A', 'Male', 'Female', "Transgender", "Unknown")
?colnames
colnames
?colnames
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Pie, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
Pie("gender")
colnames(police_final)
Pie <- function(colnames(police_final)){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Pie, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
library(shiny)
library(plotly)
library(dplyr)
library(rsconnect)
police_final <-read.csv("police_final.csv")
# Pie Chart function
Gender <- c('N/A', 'Male', 'Female', "Transgender", "Unknown")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~colnames(police_final), values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
shinyServer(function(input, output) {
output$plot <- renderPlotly(Pie(input$variable),
if(input$variable = "gender"){
labels = Gender}
)}
)
Magic<- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())}
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~colnames(police_final), values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
colnames(police_final)
data("USPersonalExpenditure")
data <- ("USPersonalExpenditure")
data <- (USPersonalExpenditure)
View(data)
Magic("armed")
gender.vector <- c('N/A', 'Male', 'Female', "Transgender", "Unknown")
armed.vector <- c('Allegedly Armed', 'Clearly unarmed', 'Unclear', 'Vehicle')
runApp()
runApp()
if(input$variable == "gender") {
x = gender.vector
} else if (input$variable == "armed")
x = armed.vector
if(input$variable == "gender") {
x = gender.vector
}
if(Pie(input$variable) == "gender") {
x = gender.vector
}
runApp()
shinyServer(function(input, output) {
output$plot <- renderPlotly(Pie(input$variable)
)}
)
if(input$variable == "gender") {
x = gender.vector
} else if (input$variable == "armed")
x = armed.vector
runApp()
runApp()
runApp()
Pie("gender")
runApp()
Pie("gender")
runApp()
Pie("gender")
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Pie, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = ~Pie, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
shinyServer(function(input, output) {
output$plot <- renderPlotly(Pie(input$variable)}
runApp()
Pie <- function(col_name){
police_final %>%
group_by_(col_name) %>%
summarise(count=n())%>%
plot_ly(labels = x, values = ~count, type = 'pie') %>%
layout(
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))}
runApp()
runApp()
